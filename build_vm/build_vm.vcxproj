<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\luajit\src\host\buildvm.c" />
    <ClCompile Include="..\luajit\src\host\buildvm_asm.c" />
    <ClCompile Include="..\luajit\src\host\buildvm_fold.c" />
    <ClCompile Include="..\luajit\src\host\buildvm_lib.c" />
    <ClCompile Include="..\luajit\src\host\buildvm_peobj.c" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\luajit\dynasm\dasm_arm.h" />
    <ClInclude Include="..\luajit\dynasm\dasm_arm64.h" />
    <ClInclude Include="..\luajit\dynasm\dasm_mips.h" />
    <ClInclude Include="..\luajit\dynasm\dasm_ppc.h" />
    <ClInclude Include="..\luajit\dynasm\dasm_proto.h" />
    <ClInclude Include="..\luajit\dynasm\dasm_x86.h" />
    <ClInclude Include="..\luajit\src\host\buildvm.h" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{ecdfc080-c5e9-47ed-9c3b-8be42de33ad5}</ProjectGuid>
    <RootNamespace>buildvm</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)bin\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)tmp\$(PlatformName)\$(ProjectName)\$(Configuration)\</IntDir>
    <PreBuildEventUseInBuild>true</PreBuildEventUseInBuild>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)bin\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)tmp\$(PlatformName)\$(ProjectName)\$(Configuration)\</IntDir>
    <PreBuildEventUseInBuild>true</PreBuildEventUseInBuild>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions);_CRT_SECURE_NO_DEPRECATE;_CRT_STDIO_INLINE=__declspec(dllexport)__inline</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard_C>stdc11</LanguageStandard_C>
      <AdditionalIncludeDirectories>$(SolutionDir)\luajit\src;$(SolutionDir)\luajit\dynasm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessKeepComments>false</PreprocessKeepComments>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PreBuildEvent>
      <Command>cd $(SolutionDir)luajit\src
$(OutDir)minilua.exe $(SolutionDir)luajit\dynasm\dynasm.lua -LN -D WIN -D JIT -D FFI -D ENDIAN_LE -D FPU -o $(SolutionDir)luajit\src\host\buildvm_arch.h $(SolutionDir)luajit\src\vm_x86.dasc
git show -s --format=%%ct &gt; $(SolutionDir)luajit\src\luajit_relver.txt
$(OutDir)minilua.exe $(SolutionDir)luajit\src\host\genversion.lua</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>@setlocal
cd $(SolutionDir)luajit\src
set ALL_LIB=lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c lib_buffer.c
if not exist $(SolutionDir)lua_obj md $(SolutionDir)lua_obj
$(OutDir)build_vm.exe -m peobj -o $(SolutionDir)lua_obj\lj_vm.obj
$(OutDir)build_vm.exe -m bcdef -o $(SolutionDir)build_vm\lj_bcdef.h %ALL_LIB%
$(OutDir)build_vm.exe -m ffdef -o $(SolutionDir)build_vm\lj_ffdef.h %ALL_LIB%
$(OutDir)build_vm.exe -m libdef -o $(SolutionDir)build_vm\lj_libdef.h %ALL_LIB%
$(OutDir)build_vm.exe -m recdef -o $(SolutionDir)build_vm\lj_recdef.h %ALL_LIB%
$(OutDir)build_vm.exe -m vmdef -o $(SolutionDir)luajit\src\jit\vmdef.lua %ALL_LIB%
$(OutDir)build_vm.exe -m folddef -o $(SolutionDir)build_vm\lj_folddef.h lj_opt_fold.c
@endlocal</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions);_CRT_SECURE_NO_DEPRECATE;_CRT_STDIO_INLINE=__declspec(dllexport)__inline</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard_C>stdc11</LanguageStandard_C>
      <AdditionalIncludeDirectories>$(SolutionDir)\luajit\src;$(SolutionDir)\luajit\dynasm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessKeepComments>false</PreprocessKeepComments>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
    </Link>
    <PreBuildEvent>
      <Command>cd $(SolutionDir)luajit\src
$(OutDir)minilua.exe $(SolutionDir)luajit\dynasm\dynasm.lua -LN -D WIN -D JIT -D FFI -D ENDIAN_LE -D FPU -o $(SolutionDir)luajit\src\host\buildvm_arch.h $(SolutionDir)luajit\src\vm_x86.dasc
git show -s --format=%%ct &gt; $(SolutionDir)luajit\src\luajit_relver.txt
$(OutDir)minilua.exe $(SolutionDir)luajit\src\host\genversion.lua</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>@setlocal
cd $(SolutionDir)luajit\src
set ALL_LIB=lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c lib_buffer.c
if not exist $(SolutionDir)lua_obj md $(SolutionDir)lua_obj
$(OutDir)build_vm.exe -m peobj -o $(SolutionDir)lua_obj\lj_vm.obj
$(OutDir)build_vm.exe -m bcdef -o $(SolutionDir)build_vm\lj_bcdef.h %ALL_LIB%
$(OutDir)build_vm.exe -m ffdef -o $(SolutionDir)build_vm\lj_ffdef.h %ALL_LIB%
$(OutDir)build_vm.exe -m libdef -o $(SolutionDir)build_vm\lj_libdef.h %ALL_LIB%
$(OutDir)build_vm.exe -m recdef -o $(SolutionDir)build_vm\lj_recdef.h %ALL_LIB%
$(OutDir)build_vm.exe -m vmdef -o $(SolutionDir)luajit\src\jit\vmdef.lua %ALL_LIB%
$(OutDir)build_vm.exe -m folddef -o $(SolutionDir)build_vm\lj_folddef.h lj_opt_fold.c
@endlocal</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>